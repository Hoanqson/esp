local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Cấu hình có thể thay đổi
local CONFIG = {
    -- Cấu hình ESP
    targetNames = {"Bond"}, -- Tên item cần tìm, có thể thêm nhiều tên
    espColor = Color3.fromRGB(0, 191, 255), -- Màu của nhãn ESP (xanh dương)
    maxDistance = 1000, -- Khoảng cách tối đa để hiển thị ESP (đơn vị studs)
    updateInterval = 1, -- Cập nhật ESP mỗi giây
    refreshInterval = 5, -- Thời gian làm mới danh sách vật phẩm (giây)
    toggleKey = Enum.KeyCode.B, -- Phím để bật/tắt ESP
    espSize = UDim2.new(0, 200, 0, 50), -- Kích thước của nhãn ESP (rộng, cao)
    espFont = Enum.Font.SourceSansBold, -- Font của nhãn ESP
    espTextSize = 16, -- Kích thước chữ của nhãn ESP
    espTextStrokeTransparency = 0, -- Độ trong suốt của viền chữ ESP
    espTextStrokeColor = Color3.new(0, 0, 0), -- Màu viền chữ ESP
    useRandomColors = true, -- Sử dụng màu ngẫu nhiên cho các vật phẩm khác nhau
    itemColors = {}, -- Lưu màu cho mỗi loại vật phẩm

    -- Cấu hình GUI
    guiFrameSize = UDim2.new(0, 250, 0, 280), -- Kích thước khung GUI (tăng chiều cao để chứa thêm nút)
    guiFramePosition = UDim2.new(0.5, -125, 0.2, 0), -- Vị trí ban đầu của GUI
    guiBackgroundColor = Color3.fromRGB(40, 40, 40), -- Màu nền của GUI
    guiBackgroundTransparency = 0.1, -- Độ trong suốt nền GUI
    guiBorderColor = Color3.fromRGB(0, 255, 255), -- Màu viền GUI
    guiBorderThickness = 3, -- Độ dày viền GUI
    guiTitleColor = Color3.fromRGB(0, 255, 255), -- Màu chữ tiêu đề
    guiButtonColor = Color3.fromRGB(0, 150, 255), -- Màu nút Áp dụng
    guiToggleOnColor = Color3.fromRGB(46, 204, 113), -- Màu nút Bật/Tắt khi bật (xanh lá)
    guiToggleOffColor = Color3.fromRGB(231, 76, 60), -- Màu nút Bật/Tắt khi tắt (đỏ)

    -- Cấu hình nút ẩn/hiện menu
    miniButtonSize = UDim2.new(0, 50, 0, 50), -- Kích thước nút nhỏ
    miniButtonPosition = UDim2.new(0, 20, 0, 20), -- Vị trí nút nhỏ
    miniButtonColor = Color3.fromRGB(40, 40, 40), -- Màu nền nút
    miniButtonBackgroundTransparency = 0.1, -- Độ trong suốt nền nút
    miniButtonTextColor = Color3.fromRGB(0, 200, 255), -- Màu biểu tượng trên nút nhỏ
    miniButtonText = "ESP", -- Văn bản hiển thị trên nút nhỏ
    miniButtonTextSize = 10, -- Kích thước chữ cho nút nhỏ
    miniButtonToggleKey = Enum.KeyCode.RightControl, -- Phím để hiện lại menu khi đã ẩn

    -- Cấu hình thông báo
    notificationDuration = 3, -- Thời gian hiển thị thông báo (giây)
    showNotifications = false, -- Có hiển thị thông báo hay không

    -- Cấu hình đi bộ tự động
    walkSpeed = 20, -- Tốc độ đi bộ (studs/giây)
    walkStopDistance = 3, -- Khoảng cách dừng lại với item (studs)
    walkUpdateRate = 0.1, -- Tần suất cập nhật đường đi (giây)
    originalWalkSpeed = nil, -- Tốc độ đi bộ ban đầu của nhân vật (sẽ được lưu khi kích hoạt)
    walkPathColor = Color3.fromRGB(255, 255, 0), -- Màu đường đi (vàng)
    showWalkPath = false, -- Hiển thị đường đi khi đang di chuyển
    continuousWalk = false, -- Tiếp tục đi đến vật phẩm tiếp theo sau khi đến hoặc vật phẩm biến mất
    autoStopWalk = false, -- Tự động dừng khi đến gần vật phẩm
    walkRetryInterval = 1, -- Thời gian thử lại đi bộ nếu bị gián đoạn (giây)
    maxWalkRetries = 10, -- Số lần thử lại tối đa

    -- Cấu hình toggle mới
    toggleWidth = 60, -- Chiều rộng nút toggle
    toggleHeight = 25, -- Chiều cao nút toggle
    toggleCircleSize = 19, -- Kích thước vòng tròn di chuyển
    toggleOffsetX = 7, -- Khoảng cách từ lề

    -- Cấu hình animation
    animationSpeed = 0.3, -- Tốc độ animation cho UI

    -- Cấu hình Noclip (Mới)
    noclipToggleKey = Enum.KeyCode.N, -- Phím để bật/tắt noclip

    -- Cấu hình Auto-Interact (Mới)
    interactKey = Enum.KeyCode.E, -- Phím tương tác mặc định
    interactToggleKey = Enum.KeyCode.G, -- Phím để bật/tắt tự động tương tác
    interactInterval = 0.1, -- Khoảng thời gian giữa các lần tương tác (giây)
    interactDistance = 3, -- Khoảng cách tối đa để tương tác (studs)

    -- Chế độ debug
    debugMode = false -- Bật/tắt chế độ debug (in thông tin chi tiết)
}

-- Biến toàn cục
local espEnabled = false -- Bắt đầu với ESP tắt
local allESPObjects = {}
local foundItems = {}
local updateTask = nil
local refreshTask = nil
local gui = nil
local miniButton = nil
local miniButtonGui = nil
local guiVisible = true -- Bắt đầu với GUI hiển thị
local isWalking = false -- Trạng thái đi bộ
local walkTask = nil
local walkPath = nil -- Đối tượng hiển thị đường đi
local currentTargetItem = nil -- Item hiện đang hướng đến
local walkRetryCount = 0 -- Số lần đã thử lại đi bộ
local walkRetryTask = nil -- Task thử lại đi bộ

-- Biến toàn cục mới
local fullLightEnabled = false
local noclipEnabled = false -- Trạng thái noclip
local noclipConnection = nil -- Connection cho noclip
local autoInteractEnabled = false -- Trạng thái tự động tương tác
local autoInteractConnection = nil -- Connection cho auto interact

-- Khai báo hàm để sử dụng trước
local stopWalking
local walkToNearestItem
local getNearestItem
local toggleMainGUI
local createMiniButton
local toggleNoclip
local toggleAutoInteract
local showNotification
local addTargetName

-- Tạo màu ngẫu nhiên
local function getRandomColor()
    local r = math.random(0, 255)
    local g = math.random(0, 255)
    local b = math.random(0, 255)
    return Color3.fromRGB(r, g, b)
end

-- Lấy màu cho item (giữ nguyên màu nếu đã có, tạo màu mới nếu chưa)
local function getItemColor(itemName)
    if not CONFIG.useRandomColors then
        return CONFIG.espColor
    end

    if not CONFIG.itemColors[itemName] then
        CONFIG.itemColors[itemName] = getRandomColor()
    end

    return CONFIG.itemColors[itemName]
end

-- Hàm an toàn để lấy vị trí của một đối tượng
local function safeGetPosition(object)
    if not object or typeof(object) ~= "Instance" or not object:IsDescendantOf(game) then
        return hrp.Position
    end

    local position = nil
    local success = pcall(function()
        if object:IsA("BasePart") then
            position = object.Position
        elseif object:IsA("Model") or object:IsA("Tool") or object:IsA("Accessory") then
            position = object:GetPivot().Position
        elseif object.PrimaryPart then
            position = object.PrimaryPart.Position
        else
            for _, child in ipairs(object:GetDescendants()) do
                if child:IsA("BasePart") then
                    position = child.Position
                    break
                end
            end
        end
    end)

    if not success or not position then
        return hrp.Position
    end

    return position
end

-- Tạo ESP để định vị
local function createESP(part, name)
    if not part or not part:IsDescendantOf(game) then return nil, nil end

    local position = safeGetPosition(part)
    local distance = (hrp.Position - position).Magnitude

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ItemESP"
    billboard.AlwaysOnTop = true
    billboard.Size = CONFIG.espSize
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.Adornee = part

    local label = Instance.new("TextLabel")
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Text = name .. " [" .. math.floor(distance) .. "m]"
    label.TextColor3 = getItemColor(name)
    label.TextStrokeColor3 = CONFIG.espTextStrokeColor
    label.TextStrokeTransparency = CONFIG.espTextStrokeTransparency
    label.TextSize = CONFIG.espTextSize
    label.Font = CONFIG.espFont
    label.TextScaled = false
    label.Parent = billboard

    local parent = game:GetService("CoreGui")
    pcall(function()
        billboard.Parent = parent
    end)

    table.insert(allESPObjects, billboard)

    return billboard, label
end

-- Hàm kiểm tra và cập nhật các esp objects
local function updateESPObjects()
    -- Kiểm tra và xóa các ESP không hợp lệ
    local i = 1
    while i <= #allESPObjects do
        local object = allESPObjects[i]
        if not object or not object.Parent then
            table.remove(allESPObjects, i)
        else
            i = i + 1
        end
    end

    -- Kiểm tra và xóa các item không hợp lệ
    i = 1
    while i <= #foundItems do
        local item = foundItems[i]
        if not item or not item.part or not item.part:IsDescendantOf(game) or not item.billboard or not item.billboard.Parent then
            if item and item.billboard and item.billboard.Parent then
                item.billboard:Destroy()
            end

            -- Kiểm tra nếu đây là vật phẩm đang hướng đến
            if currentTargetItem and currentTargetItem == item then
                currentTargetItem = nil

                -- Nếu đang đi và cấu hình cho phép, tìm vật phẩm tiếp theo
                if isWalking and CONFIG.continuousWalk then
                    task.spawn(function()
                        task.wait(0.5) -- Chờ một chút trước khi tìm vật phẩm mới
                        walkToNearestItem(true) -- Tìm và đi đến vật phẩm mới
                    end)
                end
            end

            table.remove(foundItems, i)
        else
            i = i + 1
        end
    end
end

-- Tìm tất cả items phù hợp
local function findItems()
    if not espEnabled then return {} end

    updateESPObjects() -- Dọn dẹp trước khi tìm kiếm mới

    local count = 0
    local newItems = {}
    local foundItemsMap = {} -- Dùng để theo dõi các item đã tìm thấy

    -- Kiểm tra các items đã có và giữ lại nếu còn tồn tại
    for _, item in ipairs(foundItems) do
        if item.part and item.part:IsDescendantOf(game) and item.billboard and item.billboard.Parent then
            local keep = false
            for _, targetName in ipairs(CONFIG.targetNames) do
                if item.part.Name == targetName then
                    local position = safeGetPosition(item.part)
                    local distance = (hrp.Position - position).Magnitude

                    if distance <= CONFIG.maxDistance then
                        foundItemsMap[item.part] = true
                        table.insert(newItems, item)
                        keep = true
                        count = count + 1
                        break
                    end
                end
            end

            if not keep and item.billboard then
                pcall(function() item.billboard:Destroy() end)
            end
        end
    end

    local function searchInModel(model)
        if not espEnabled then return end -- Thoát nếu ESP đã tắt

        for _, v in pairs(model:GetChildren()) do
            -- Ngắt tìm kiếm nếu ESP bị tắt giữa chừng
            if not espEnabled then return end

            -- Kiểm tra nếu đối tượng này phù hợp với một trong các tên mục tiêu
            for _, targetName in ipairs(CONFIG.targetNames) do
                if v.Name == targetName and not foundItemsMap[v] then
                    local position = safeGetPosition(v)
                    local distance = (hrp.Position - position).Magnitude

                    if distance <= CONFIG.maxDistance then
                        count = count + 1
                        if CONFIG.debugMode then
                            print("Đã tìm thấy " .. v.Name .. " #" .. count .. " tại vị trí: " .. tostring(position) .. " (Khoảng cách: " .. math.floor(distance) .. "m)")
                        end

                        local billboard, label = createESP(v, v.Name)
                        if billboard and label then
                            foundItemsMap[v] = true
                            table.insert(newItems, {
                                part = v,
                                billboard = billboard,
                                label = label,
                                lastPosition = position
                            })
                        end
                    end
                end
            end

            -- Tìm kiếm đệ quy trong các con của mô hình này
            if #v:GetChildren() > 0 then
                searchInModel(v)
            end
        end
    end

    pcall(function()
        searchInModel(game.Workspace)
    end)

    if CONFIG.debugMode then
        if count > 0 then
            print("Đã tìm thấy tổng cộng " .. count .. " vật phẩm phù hợp")
        else
            print("Không tìm thấy vật phẩm nào phù hợp")
        end
    end

    foundItems = newItems
    return newItems
end

-- Cập nhật thông tin khoảng cách trên ESP
local function updateDistances()
    if not espEnabled then return end

    for _, item in ipairs(foundItems) do
        if item.part and item.part:IsDescendantOf(game) and item.billboard and item.billboard.Parent and item.label then
            local position = safeGetPosition(item.part)
            local distance = (hrp.Position - position).Magnitude

            pcall(function()
                item.label.Text = item.part.Name .. " [" .. math.floor(distance) .. "m]"
                item.lastPosition = position
            end)
        end
    end
end

-- Tạo thông báo
showNotification = function(message, duration)
    if not CONFIG.showNotifications then return end

    duration = duration or CONFIG.notificationDuration

    local notifGui = Instance.new("ScreenGui")
    notifGui.Name = "ESPNotification"
    notifGui.ResetOnSpawn = false
    notifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    pcall(function()
        notifGui.Parent = game:GetService("CoreGui")
    end)

    local notifFrame = Instance.new("Frame")
    notifFrame.Name = "NotificationFrame"
    notifFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    notifFrame.BorderColor3 = CONFIG.espColor
    notifFrame.BorderSizePixel = 2
    notifFrame.Position = UDim2.new(0.5, -150, 0.8, 0)
    notifFrame.Size = UDim2.new(0, 300, 0, 50)
    notifFrame.Parent = notifGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = notifFrame

    local notifText = Instance.new("TextLabel")
    notifText.Name = "NotificationText"
    notifText.BackgroundTransparency = 1
    notifText.Size = UDim2.new(1, 0, 1, 0)
    notifText.Font = CONFIG.espFont
    notifText.TextColor3 = Color3.new(1, 1, 1)
    notifText.TextSize = 16
    notifText.Text = message
    notifText.Parent = notifFrame

    -- Animation
    notifFrame.Position = UDim2.new(0.5, -150, 1, 10)
    game:GetService("TweenService"):Create(
        notifFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
        {Position = UDim2.new(0.5, -150, 0.8, 0)}
    ):Play()

    task.spawn(function()
        task.wait(duration)

        if notifFrame and notifFrame.Parent then
            local fadeTween = game:GetService("TweenService"):Create(
                notifFrame,
                TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
                {Position = UDim2.new(0.5, -150, 1, 10)}
            )
            fadeTween:Play()

            fadeTween.Completed:Wait()
            notifGui:Destroy()
        end
    end)
end

-- Thêm tên vật phẩm để tìm kiếm
addTargetName = function(name)
    if not name or name == "" then
        showNotification("Vui lòng nhập tên vật phẩm cần tìm", 2)
        return false
    end

    -- Kiểm tra nếu tên đã tồn tại
    for _, existingName in ipairs(CONFIG.targetNames) do
        if existingName == name then
            showNotification("Vật phẩm '" .. name .. "' đã có trong danh sách", 2)
            return false
        end
    end

    -- Thêm vào danh sách
    table.insert(CONFIG.targetNames, name)

    -- Cập nhật danh sách trong GUI nếu đang mở
    if gui then
        local targetList = gui:FindFirstChild("TargetList", true)
        if targetList then
            local newItem = Instance.new("TextLabel")
            newItem.Name = name .. "Item"
            newItem.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            newItem.Size = UDim2.new(1, -10, 0, 25)
            newItem.Text = name
            newItem.TextColor3 = getItemColor(name)
            newItem.Font = Enum.Font.SourceSans
            newItem.TextSize = 14
            newItem.Parent = targetList

            -- Nút xóa
            local removeButton = Instance.new("TextButton")
            removeButton.Name = "RemoveButton"
            removeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
            removeButton.Position = UDim2.new(1, -25, 0, 2)
            removeButton.Size = UDim2.new(0, 20, 0, 20)
            removeButton.Text = "X"
            removeButton.TextColor3 = Color3.new(1, 1, 1)
            removeButton.Font = Enum.Font.SourceSansBold
            removeButton.TextSize = 14
            removeButton.Parent = newItem

            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 4)
            buttonCorner.Parent = removeButton

            removeButton.MouseButton1Click:Connect(function()
                -- Xóa vật phẩm khỏi danh sách
                for i, targetName in ipairs(CONFIG.targetNames) do
                    if targetName == name then
                        table.remove(CONFIG.targetNames, i)
                        break
                    end
                end

                -- Xóa khỏi GUI
                newItem:Destroy()

                showNotification("Đã xóa vật phẩm '" .. name .. "' khỏi danh sách", 2)
            end)

            -- Cập nhật kích thước canvas
            local targetListLayout = targetList:FindFirstChildOfClass("UIListLayout")
            if targetListLayout then
                targetList.CanvasSize = UDim2.new(0, 0, 0, targetListLayout.AbsoluteContentSize.Y + 10)
            end
        end
    end

    showNotification("Đã thêm vật phẩm '" .. name .. "' vào danh sách tìm kiếm", 2)
    return true
end

-- Đoạn này để bật/tắt ESP
local function toggleESP()
    espEnabled = not espEnabled

    if espEnabled then
        -- Bật ESP
        if not refreshTask then
            refreshTask = task.spawn(function()
                while espEnabled do
                    findItems()
                    task.wait(CONFIG.refreshInterval)
                end
            end)
        end

        if not updateTask then
            updateTask = task.spawn(function()
                while espEnabled do
                    updateDistances()
                    task.wait(CONFIG.updateInterval)
                end
            end)
        end

        showNotification("ESP đã được kích hoạt", 2)
    else
        -- Dừng các task đang chạy
        if refreshTask then
            task.cancel(refreshTask)
            refreshTask = nil
        end

        if updateTask then
            task.cancel(updateTask)
            updateTask = nil
        end

        -- Xóa tất cả ESP objects
        for _, obj in ipairs(allESPObjects) do
            pcall(function()
                obj:Destroy()
            end)
        end
        allESPObjects = {}
        foundItems = {}

        showNotification("ESP đã được tắt", 2)
    end

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local espToggle = gui:FindFirstChild("ESPToggle", true)
        if espToggle then
            local circle = espToggle:FindFirstChild("Circle")
            if circle then
                -- Animation cho toggle
                local targetPos = espEnabled 
                    and UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                    or UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)

                local targetColor = espEnabled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor

                -- Tween cho vòng tròn
                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )

                -- Tween cho nền
                local colorTween = game:GetService("TweenService"):Create(
                    espToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end
end

-- Lấy item gần nhất
getNearestItem = function()
    local nearestDistance = math.huge
    local nearestItem = nil

    for _, item in ipairs(foundItems) do
        if item.part and item.part:IsDescendantOf(game) then
            local position = safeGetPosition(item.part)
            local distance = (hrp.Position - position).Magnitude

            if distance < nearestDistance then
                nearestDistance = distance
                nearestItem = item
            end
        end
    end

    return nearestItem, nearestDistance
end

-- Dừng việc đi bộ tự động
stopWalking = function()
    isWalking = false
    currentTargetItem = nil

    if walkTask then
        task.cancel(walkTask)
        walkTask = nil
    end

    if walkRetryTask then
        task.cancel(walkRetryTask)
        walkRetryTask = nil
    end

    -- Xóa đường đi nếu có
    if walkPath then
        pcall(function() walkPath:Destroy() end)
        walkPath = nil
    end

    -- Khôi phục tốc độ đi ban đầu
    if CONFIG.originalWalkSpeed and humanoid then
        humanoid.WalkSpeed = CONFIG.originalWalkSpeed
        CONFIG.originalWalkSpeed = nil
    end

    -- Dừng nhân vật
    if humanoid then
        humanoid:MoveTo(hrp.Position)
    end

    -- Cập nhật trạng thái nút trong GUI
    if gui then
        local walkButton = gui:FindFirstChild("WalkButton")
        if walkButton then
            -- Animation cho nút đi bộ
            local colorTween = game:GetService("TweenService"):Create(
                walkButton,
                TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                {BackgroundColor3 = CONFIG.guiButtonColor}
            )

            colorTween:Play()
            walkButton.Text = "Đi đến Gần nhất"
        end
    end

    showNotification("Đã dừng đi bộ tự động", 2)
end

-- Thêm biến để theo dõi item bỏ qua
local ignoredItems = {}

-- Đi bộ đến vật phẩm gần nhất - sử dụng MoveTo của Roblox
walkToNearestItem = function(fromContinuous)
    if not fromContinuous then
        isWalking = not isWalking
        if not isWalking then
            stopWalking()
            return
        end
    end

    -- Kiểm tra nếu ESP đang bật
    if not espEnabled then
        showNotification("Hãy bật ESP trước khi đi đến vật phẩm", 2)
        return
    end

    -- Tìm vật phẩm gần nhất mà không nằm trong danh sách bỏ qua
    local nearestItem, distance = nil, math.huge

    for _, item in ipairs(foundItems) do
        if item.part and item.part:IsDescendantOf(game) then
            -- Kiểm tra xem item có trong danh sách bỏ qua không
            local isIgnored = false
            for _, ignoredItem in ipairs(ignoredItems) do
                if ignoredItem == item.part then
                    isIgnored = true
                    break
                end
            end

            if not isIgnored then
                local position = safeGetPosition(item.part)
                local itemDistance = (hrp.Position - position).Magnitude

                if itemDistance < distance then
                    distance = itemDistance
                    nearestItem = item
                end
            end
        end
    end

    if not nearestItem then
        showNotification("Không tìm thấy vật phẩm nào gần đây hoặc tất cả đã bị bỏ qua", 2)
        return
    end

    -- Đánh dấu trạng thái đi bộ
    isWalking = true
    currentTargetItem = nearestItem
    walkRetryCount = 0

    -- Lưu tốc độ đi ban đầu
    if not CONFIG.originalWalkSpeed then
        CONFIG.originalWalkSpeed = humanoid.WalkSpeed
    end

    -- Thiết lập tốc độ đi mới
    humanoid.WalkSpeed = CONFIG.walkSpeed

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local walkToggle = gui:FindFirstChild("WalkToggle", true)
        if walkToggle then
            local circle = walkToggle:FindFirstChild("Circle")
            if circle then
                -- Animation cho toggle
                local targetPos = UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                local targetColor = CONFIG.guiToggleOnColor

                -- Tween cho vòng tròn
                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )

                -- Tween cho nền
                local colorTween = game:GetService("TweenService"):Create(
                    walkToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end

    -- Tạo đường đi nếu cấu hình cho phép
    if CONFIG.showWalkPath then
        if walkPath then
            pcall(function() walkPath:Destroy() end)
        end

        walkPath = Instance.new("Part")
        walkPath.Name = "WalkPath"
        walkPath.Anchored = true
        walkPath.CanCollide = false
        walkPath.Size = Vector3.new(0.2, 0.2, distance)
        walkPath.Material = Enum.Material.Neon
        walkPath.Color = CONFIG.walkPathColor
        walkPath.Transparency = 0.3

        local position = safeGetPosition(nearestItem.part)
        walkPath.CFrame = CFrame.new(
            hrp.Position + Vector3.new(0, -2, 0), 
            position + Vector3.new(0, -2, 0)
        )

        pcall(function()
            walkPath.Parent = game.Workspace
        end)
    end

    -- Tạo nút bỏ qua
    if currentTargetItem and currentTargetItem.part then
        local ignoreButton = createIgnoreButton(currentTargetItem.part)
    end

    -- Hiển thị thông báo
    showNotification("Đang đi đến " .. nearestItem.part.Name .. " (" .. math.floor(distance) .. "m)", 2)

    -- Cách đi bộ tự nhiên của Roblox - dùng MoveTo
    walkTask = task.spawn(function()
        local MovingState = Enum.HumanoidStateType.Running

        while isWalking and currentTargetItem and currentTargetItem.part and currentTargetItem.part:IsDescendantOf(game) do
            local itemPosition = safeGetPosition(currentTargetItem.part)
            local currentDistance = (hrp.Position - itemPosition).Magnitude

            -- Cập nhật đường đi nếu hiển thị
            if CONFIG.showWalkPath and walkPath then
                pcall(function()
                    walkPath.Size = Vector3.new(0.2, 0.2, currentDistance)
                    walkPath.CFrame = CFrame.new(
                        hrp.Position + Vector3.new(0, -2, 0), 
                        itemPosition + Vector3.new(0, -2, 0)
                    )
                end)
            end

            -- Kiểm tra nếu đã đến đủ gần hoặc khoảng cách là 0
            if currentDistance <= CONFIG.walkStopDistance or currentDistance == 0 then
                showNotification("Đã đến " .. currentTargetItem.part.Name, 2)
                if CONFIG.autoStopWalk then
                    stopWalking()
                    break
                end
            end

            -- Sử dụng Humanoid.MoveTo để di chuyển
            if humanoid and itemPosition then
                humanoid:MoveTo(itemPosition)

                -- Chờ một khoảng thời gian 
                task.wait(CONFIG.walkUpdateRate)

                -- Kiểm tra lại khoảng cách
                local newDistance = (hrp.Position - itemPosition).Magnitude

                -- Nếu không di chuyển được (bị kẹt), thử tìm đường khác
                if math.abs(currentDistance - newDistance) < 0.1 and 
                   newDistance > CONFIG.walkStopDistance then
                    -- Thử một vị trí gần đó
                    local direction = (itemPosition - hrp.Position).Unit
                    local targetPosition = hrp.Position + direction * 5
                    humanoid:MoveTo(targetPosition)
                    task.wait(CONFIG.walkUpdateRate)
                end
            else
                -- Nếu humanoid không tồn tại, dừng đi bộ
                stopWalking()
                break
            end
        end

        -- Kiểm tra nếu vật phẩm biến mất
        if isWalking and not (currentTargetItem and currentTargetItem.part and currentTargetItem.part:IsDescendantOf(game)) then
            showNotification("Vật phẩm không còn tồn tại, dừng đi bộ", 2)
            stopWalking()
        end
    end)
end

-- Hàm dừng di chuyển
stopWalking = function()
    isWalking = false
    currentTargetItem = nil

    if walkTask then
        task.cancel(walkTask)
        walkTask = nil
    end

    if walkRetryTask then
        task.cancel(walkRetryTask)
        walkRetryTask = nil
    end

    -- Xóa đường đi nếu có
    if walkPath then
        pcall(function() walkPath:Destroy() end)
        walkPath = nil
    end

    -- Xóa nút bỏ qua nếu có
    local ignoreGui = game:GetService("CoreGui"):FindFirstChild("IgnoreButtonGui")
    if ignoreGui then
        ignoreGui:Destroy()
    end

    -- Khôi phục tốc độ đi ban đầu
    if CONFIG.originalWalkSpeed and humanoid then
        humanoid.WalkSpeed = CONFIG.originalWalkSpeed
        CONFIG.originalWalkSpeed = nil
    end

    -- Dừng nhân vật
    if humanoid then
        humanoid:MoveTo(hrp.Position)
    end
    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local walkToggle = gui:FindFirstChild("WalkToggle", true)
        if walkToggle then
            local circle = walkToggle:FindFirstChild("Circle")
            if circle then
                -- Animation cho toggle
                local targetPos = UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)
                local targetColor = CONFIG.guiToggleOffColor

                -- Tween cho vòng tròn
                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )

                -- Tween cho nền
                local colorTween = game:GetService("TweenService"):Create(
                    walkToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end

    showNotification("Đã dừng đi bộ tự động", 2)
end

-- Tạo nút bỏ qua cho item đang hướng đến
createIgnoreButton = function(itemPart)
    -- Hủy nút cũ nếu có
    local existingGui = game:GetService("CoreGui"):FindFirstChild("IgnoreButtonGui")
    if existingGui then
        existingGui:Destroy()
    end

    local ignoreGui = Instance.new("ScreenGui")
    ignoreGui.Name = "IgnoreButtonGui"
    ignoreGui.ResetOnSpawn = false
    ignoreGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    pcall(function()
        ignoreGui.Parent = game:GetService("CoreGui")
    end)

    local ignoreFrame = Instance.new("Frame")
    ignoreFrame.Name = "IgnoreFrame"
    ignoreFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ignoreFrame.BorderSizePixel = 0
    ignoreFrame.Position = UDim2.new(0.5, -100, 0.7, 0)
    ignoreFrame.Size = UDim2.new(0, 200, 0, 40)
    ignoreFrame.Parent = ignoreGui

    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0, 8)
    frameCorner.Parent = ignoreFrame

    local ignoreButton = Instance.new("TextButton")
    ignoreButton.Name = "IgnoreButton"
    ignoreButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    ignoreButton.Position = UDim2.new(0.5, -80, 0.5, -15)
    ignoreButton.Size = UDim2.new(0, 160, 0, 30)
    ignoreButton.Font = Enum.Font.SourceSansBold
    ignoreButton.Text = "Bỏ qua item này"
    ignoreButton.TextColor3 = Color3.new(1, 1, 1)
    ignoreButton.TextSize = 14
    ignoreButton.Parent = ignoreFrame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = ignoreButton

    ignoreButton.MouseButton1Click:Connect(function()
        -- Thêm vào danh sách bỏ qua
        table.insert(ignoredItems, itemPart)

        -- Hiển thị thông báo
        showNotification("Đã bỏ qua item " .. itemPart.Name, 2)

        -- Dừng di chuyển hiện tại
        stopWalking()

        -- Tìm item khác để đi đến
        task.spawn(function()
            task.wait(0.5)
            walkToNearestItem(true)
        end)

        -- Xóa GUI
        ignoreGui:Destroy()
    end)

    return ignoreGui
end

-- Thêm chức năng để xóa danh sách bỏ qua
clearIgnoredItems = function()
    ignoredItems = {}
    showNotification("Đã xóa danh sách item bỏ qua", 2)
end

-- Bật/tắt noclip
toggleNoclip = function()
    noclipEnabled = not noclipEnabled

    if noclipEnabled then
        -- Bật noclip
        if noclipConnection then
            noclipConnection:Disconnect()
        end

        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
            if character and character:IsDescendantOf(game) then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            else
                -- Nhân vật không còn tồn tại, hủy noclip
                if noclipConnection then
                    noclipConnection:Disconnect()
                    noclipConnection = nil
                    noclipEnabled = false
                    showNotification("NoClip đã tắt (nhân vật không tồn tại)", 2)
                    return
                end
            end
        end)

        showNotification("NoClip đã bật", 2)
    else
        -- Tắt noclip
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end

        -- Khôi phục CanCollide cho tất cả các phần
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                if part.Name == "HumanoidRootPart" then
                    part.CanCollide = false
                else
                    part.CanCollide = true
                end
            end
        end

        showNotification("NoClip đã tắt", 2)
    end

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local noclipToggle = gui:FindFirstChild("NoclipToggle", true)
        if noclipToggle then
            local circle = noclipToggle:FindFirstChild("Circle")
            if circle then
                -- Animation cho toggle
                local targetPos = noclipEnabled 
                    and UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                    or UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)

                local targetColor = noclipEnabled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor

                -- Tween cho vòng tròn
                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )

                -- Tween cho nền
                local colorTween = game:GetService("TweenService"):Create(
                    noclipToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end
end

-- Bật/tắt tự động tương tác

local toggleFullLight = function()
    fullLightEnabled = not fullLightEnabled
    -- Kích hoạt lại script mỗi khi bật hoặc tắt
    pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Hoanqson/full-light/refs/heads/main/main.lua'))()
    end)

    showNotification("Full Light đã " .. (fullLightEnabled and "bật" or "tắt"), 2)

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local fullLightToggle = gui:FindFirstChild("FullLightToggle", true)
        if fullLightToggle then
            local circle = fullLightToggle:FindFirstChild("Circle")
            if circle then
                local targetPos = fullLightEnabled
                    and UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                    or UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)

                local targetColor = fullLightEnabled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor

                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )
                local colorTween = game:GetService("TweenService"):Create(
                    fullLightToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end
end

toggleAutoInteract = function()
    autoInteractEnabled = not autoInteractEnabled

    if autoInteractEnabled then
        -- Bật tự động tương tác
        if autoInteractConnection then
            autoInteractConnection:Disconnect()
        end

        autoInteractConnection = game:GetService("RunService").Heartbeat:Connect(function()
            -- Tìm vật phẩm gần nhất
            local nearestItem, distance = getNearestItem()

            if nearestItem and distance <= CONFIG.interactDistance then
                -- Giả lập nhấn phím tương tác
                game:GetService("VirtualInputManager"):SendKeyEvent(true, CONFIG.interactKey, false, game)
                task.wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, CONFIG.interactKey, false, game)
            end

            task.wait(CONFIG.interactInterval)
        end)

        showNotification("Tự động tương tác đã bật", 2)
    else
        -- Tắt tự động tương tác
        if autoInteractConnection then
            autoInteractConnection:Disconnect()
            autoInteractConnection = nil
        end

        showNotification("Tự động tương tác đã tắt", 2)
    end

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local autoInteractToggle = gui:FindFirstChild("AutoInteractToggle", true)
        if autoInteractToggle then
            local circle = autoInteractToggle:FindFirstChild("Circle")
            if circle then
                -- Animation cho toggle
                local targetPos = autoInteractEnabled 
                    and UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                    or UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)

                local targetColor = autoInteractEnabled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor

                -- Tween cho vòng tròn
                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )

                -- Tween cho nền
                local colorTween = game:GetService("TweenService"):Create(
                    autoInteractToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end
end

-- Tạo nút toggle kiểu slide với vòng tròn bên trong
local function createToggleSwitch(parent, position, toggled, clickHandler)
    -- Tạo khung chứa nút toggle
    local toggleButton = Instance.new("Frame")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, CONFIG.toggleWidth, 0, CONFIG.toggleHeight)
    toggleButton.Position = position
    toggleButton.BackgroundColor3 = toggled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor
    toggleButton.Parent = parent

    -- Bo tròn các góc của toggle
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0) -- Làm tròn tối đa
    toggleCorner.Parent = toggleButton

    -- Tạo vòng tròn di chuyển
    local circle = Instance.new("Frame")
    circle.Name = "Circle"
    circle.Size = UDim2.new(0, CONFIG.toggleCircleSize, 0, CONFIG.toggleCircleSize)
    circle.AnchorPoint = Vector2.new(0, 0.5)

    -- Đặt vị trí vòng tròn tùy theo trạng thái
    if toggled then
        circle.Position = UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
    else
        circle.Position = UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)
    end

    circle.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Màu đen cho vòng tròn
    circle.Parent = toggleButton

    -- Bo tròn vòng tròn
    local circleCorner = Instance.new("UICorner")
    circleCorner.CornerRadius = UDim.new(1, 0)
    circleCorner.Parent = circle

    -- Phát hiện sự kiện click
    local button = Instance.new("TextButton")
    button.BackgroundTransparency = 1
    button.Text = ""
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Parent = toggleButton

    button.MouseButton1Click:Connect(function()
        clickHandler()
    end)

    -- Trả về đối tượng toggle để có thể gắn tên
    return toggleButton
end

-- Hàm tạo menu item (nhãn + nút toggle)
local function createMenuItem(parent, text, toggled, clickHandler)
    local itemContainer = Instance.new("Frame")
    itemContainer.Name = "MenuItem"
    itemContainer.BackgroundTransparency = 1
    itemContainer.Size = UDim2.new(1, -10, 0, 30)
    itemContainer.Parent = parent

    local itemLabel = Instance.new("TextLabel")
    itemLabel.Name = "ItemLabel"
    itemLabel.BackgroundTransparency = 1
    itemLabel.Position = UDim2.new(0, 10, 0, 0)
    itemLabel.Size = UDim2.new(0.7, -10, 1, 0)
    itemLabel.Font = Enum.Font.SourceSans
    itemLabel.Text = text
    itemLabel.TextColor3 = Color3.new(1, 1, 1)
    itemLabel.TextSize = 14
    itemLabel.TextXAlignment = Enum.TextXAlignment.Left
    itemLabel.Parent = itemContainer

    local toggleButton = createToggleSwitch(
        itemContainer,
        UDim2.new(1, -CONFIG.toggleWidth - 10, 0.5, -CONFIG.toggleHeight/2),
        toggled,
        clickHandler
    )

    return itemContainer, toggleButton
end

-- Tạo GUI chính
local function createMainGUI()
    -- Xóa GUI cũ nếu có
    if gui then
        gui:Destroy()
    end

    -- Tạo ScreenGui mới
    gui = Instance.new("ScreenGui")
    gui.Name = "ESPGUI"
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    pcall(function()
        gui.Parent = game:GetService("CoreGui")
    end)

    -- Container chính
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15) -- Màu nền đen tối hơn
    mainFrame.BorderSizePixel = 0
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -175) -- Căn giữa màn hình
    mainFrame.Size = UDim2.new(0, 400, 0, 350) -- Kích thước to hơn
    mainFrame.Active = true
    mainFrame.Draggable = true -- Cho phép kéo thả
    mainFrame.Parent = gui

    -- Hiệu ứng bo tròn góc
    local cornerFrame = Instance.new("UICorner")
    cornerFrame.CornerRadius = UDim.new(0, 8)
    cornerFrame.Parent = mainFrame

    -- Thanh tiêu đề
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25) -- Màu tối hơn cho thanh tiêu đề
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    -- Hiệu ứng bo tròn góc cho thanh tiêu đề
    local cornerTitle = Instance.new("UICorner")
    cornerTitle.CornerRadius = UDim.new(0, 8)
    cornerTitle.Parent = titleBar

    -- Tiêu đề
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = "ESP Main v4"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- Nút đóng
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.BackgroundTransparency = 1
    closeButton.Position = UDim2.new(1, -35, 0, 0)
    closeButton.Size = UDim2.new(0, 35, 0, 35)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextSize = 16
    closeButton.Parent = titleBar

    -- Sự kiện nút đóng
    closeButton.MouseButton1Click:Connect(function()
        toggleMainGUI()
    end)

    -- Container nội dung
    local content = Instance.new("ScrollingFrame")
    content.Name = "Content"
    content.BackgroundTransparency = 1
    content.Position = UDim2.new(0, 0, 0, 35)
    content.Size = UDim2.new(1, 0, 1, -35)
    content.CanvasSize = UDim2.new(0, 0, 0, 0) -- Sẽ được điều chỉnh sau
    content.ScrollBarThickness = 4
    content.ScrollBarImageColor3 = Color3.fromRGB(80, 80, 80)
    content.BorderSizePixel = 0
    content.Parent = mainFrame

    -- Layout cho nội dung
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Padding = UDim.new(0, 5)
    contentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    contentLayout.Parent = content

    -- Tạo các panel
    -- Panel ESP
    local espPanel = Instance.new("Frame")
    espPanel.Name = "ESPPanel"
    espPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Màu tối hơn
    espPanel.BorderSizePixel = 0
    espPanel.Size = UDim2.new(1, -20, 0, 320) -- Tăng chiều cao
    espPanel.Parent = content

    -- Hiệu ứng bo tròn góc cho panel
    local cornerPanel = Instance.new("UICorner")
    cornerPanel.CornerRadius = UDim.new(0, 8)
    cornerPanel.Parent = espPanel

    -- Tiêu đề panel
    local panelTitle = Instance.new("TextLabel")
    panelTitle.Name = "PanelTitle"
    panelTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Màu tối hơn cho tiêu đề panel
    panelTitle.Size = UDim2.new(1, 0, 0, 30)
    panelTitle.BorderSizePixel = 0
    panelTitle.Font = Enum.Font.GothamSemibold
    panelTitle.Text = "Chức năng UI"
    panelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    panelTitle.TextSize = 14
    panelTitle.Parent = espPanel

    -- Hiệu ứng bo tròn góc cho tiêu đề panel
    local cornerPanelTitle = Instance.new("UICorner")
    cornerPanelTitle.CornerRadius = UDim.new(0, 8)
    cornerPanelTitle.Parent = panelTitle

    -- Nội dung ESP
    local espContent = Instance.new("Frame")
    espContent.Name = "ESPContent"
    espContent.BackgroundTransparency = 1
    espContent.Position = UDim2.new(0, 0, 0, 40)
    espContent.Size = UDim2.new(1, 0, 1, -30)
    espContent.Parent = espPanel

    -- Layout cho nội dung ESP
    local espLayout = Instance.new("UIListLayout")
    espLayout.Padding = UDim.new(0, 15)
    espLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    espLayout.Parent = espContent

    
    -- Nút xóa danh sách bỏ qua (đặt ở đầu mục chức năng)
    local clearIgnoredButton = Instance.new("TextButton")
    clearIgnoredButton.Name = "ClearIgnoredButton"
    clearIgnoredButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    clearIgnoredButton.Size = UDim2.new(0.9, 0, 0, 30)
    clearIgnoredButton.Font = Enum.Font.SourceSansBold
    clearIgnoredButton.Text = "Xóa danh sách bỏ qua"
    clearIgnoredButton.TextColor3 = Color3.new(1, 1, 1)
    clearIgnoredButton.TextSize = 14
    clearIgnoredButton.Parent = espContent

    local clearButtonCorner = Instance.new("UICorner")
    clearButtonCorner.CornerRadius = UDim.new(0, 5)
    clearButtonCorner.Parent = clearIgnoredButton

    clearIgnoredButton.MouseButton1Click:Connect(function()
        clearIgnoredItems()
    end)

-- ESP Toggle
    local espItem, espToggle = createMenuItem(espContent, "ESP", espEnabled, function()
        toggleESP()
    end)
    espToggle.Name = "ESPToggle"

    -- Noclip Toggle
    local noclipItem, noclipToggle = createMenuItem(espContent, "NoClip", noclipEnabled, function()
        toggleNoclip()
    end)
    noclipToggle.Name = "NoclipToggle"

    -- Đi bộ tự động (kiểu toggle switch)
    local walkItem, walkToggle = createMenuItem(espContent, "Tự động đi đến item", isWalking, function()
        walkToNearestItem()
    end)
    walkToggle.Name = "WalkToggle"

    -- Tự động tương tác Toggle
    local autoInteractItem, autoInteractToggle = createMenuItem(espContent, "Tự động tương tác", autoInteractEnabled, function()
        toggleAutoInteract()
    end)
    autoInteractToggle.Name = "AutoInteractToggle"
    -- Full Light Toggle
    local fullLightItem, fullLightToggle = createMenuItem(espContent, "Full Light", fullLightEnabled, function()
        toggleFullLight()
    end)
    fullLightToggle.Name = "FullLightToggle"


    
    -- Panel thêm vật phẩm
    local addItemPanel = Instance.new("Frame")
    addItemPanel.Name = "AddItemPanel"
    addItemPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    addItemPanel.BorderSizePixel = 0
    addItemPanel.Size = UDim2.new(1, -20, 0, 250)
    addItemPanel.Parent = content

    -- Hiệu ứng bo tròn góc cho panel
    local cornerAddPanel = Instance.new("UICorner")
    cornerAddPanel.CornerRadius = UDim.new(0, 8)
    cornerAddPanel.Parent = addItemPanel

    -- Tiêu đề panel
    local addPanelTitle = Instance.new("TextLabel")
    addPanelTitle.Name = "PanelTitle"
    addPanelTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    addPanelTitle.Size = UDim2.new(1, 0, 0, 30)
    addPanelTitle.BorderSizePixel = 0
    addPanelTitle.Font = Enum.Font.GothamSemibold
    addPanelTitle.Text = "Quản lý vật phẩm tìm kiếm"
    addPanelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    addPanelTitle.TextSize = 14
    addPanelTitle.Parent = addItemPanel

    -- Hiệu ứng bo tròn góc cho tiêu đề panel
    local cornerAddPanelTitle = Instance.new("UICorner")
    cornerAddPanelTitle.CornerRadius = UDim.new(0, 8)
    cornerAddPanelTitle.Parent = addPanelTitle

    -- Nội dung thêm vật phẩm
    local addItemContent = Instance.new("Frame")
    addItemContent.Name = "AddItemContent"
    addItemContent.BackgroundTransparency = 1
    addItemContent.Position = UDim2.new(0, 0, 0, 30)
    addItemContent.Size = UDim2.new(1, 0, 0, 60)
    addItemContent.Parent = addItemPanel

    -- Textbox nhập tên vật phẩm
    local itemNameInput = Instance.new("TextBox")
    itemNameInput.Name = "ItemNameInput"
    itemNameInput.PlaceholderText = "Nhập tên vật phẩm cần tìm..."
    itemNameInput.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    itemNameInput.Position = UDim2.new(0, 10, 0, 10)
    itemNameInput.Size = UDim2.new(1, -130, 0, 30)
    itemNameInput.Font = Enum.Font.SourceSans
    itemNameInput.TextColor3 = Color3.new(1, 1, 1)
    itemNameInput.TextSize = 14
    itemNameInput.ClearTextOnFocus = false
    itemNameInput.Parent = addItemContent

    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 5)
    inputCorner.Parent = itemNameInput

    -- Nút thêm vật phẩm
    local addButton = Instance.new("TextButton")
    addButton.Name = "AddButton"
    addButton.BackgroundColor3 = CONFIG.guiButtonColor
    addButton.Position = UDim2.new(1, -110, 0, 10)
    addButton.Size = UDim2.new(0, 100, 0, 30)
    addButton.Font = Enum.Font.SourceSansBold
    addButton.Text = "Thêm"
    addButton.TextColor3 = Color3.new(1, 1, 1)
    addButton.TextSize = 14
    addButton.Parent = addItemContent

    local addButtonCorner = Instance.new("UICorner")
    addButtonCorner.CornerRadius = UDim.new(0, 5)
    addButtonCorner.Parent = addButton

    addButton.MouseButton1Click:Connect(function()
        local name = itemNameInput.Text
        if addTargetName(name) then
            itemNameInput.Text = ""
        end
    end)

    -- Danh sách vật phẩm
    local targetListLabel = Instance.new("TextLabel")
    targetListLabel.Name = "TargetListLabel"
    targetListLabel.BackgroundTransparency = 1
    targetListLabel.Position = UDim2.new(0, 10, 0, 60)
    targetListLabel.Size = UDim2.new(1, -20, 0, 20)
    targetListLabel.Font = Enum.Font.SourceSansBold
    targetListLabel.Text = "Danh sách vật phẩm đang tìm kiếm:"
    targetListLabel.TextColor3 = Color3.new(1, 1, 1)
    targetListLabel.TextSize = 14
    targetListLabel.TextXAlignment = Enum.TextXAlignment.Left
    targetListLabel.Parent = addItemPanel

    local targetList = Instance.new("ScrollingFrame")
    targetList.Name = "TargetList"
    targetList.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    targetList.Position = UDim2.new(0, 10, 0, 85)
    targetList.Size = UDim2.new(1, -20, 0, 150)
    targetList.CanvasSize = UDim2.new(0, 0, 0, 0)
    targetList.ScrollBarThickness = 4
    targetList.Parent = addItemPanel

    local targetListCorner = Instance.new("UICorner")
    targetListCorner.CornerRadius = UDim.new(0, 5)
    targetListCorner.Parent = targetList

    -- Layout cho danh sách
    local targetListLayout = Instance.new("UIListLayout")
    targetListLayout.Padding = UDim.new(0, 5)
    targetListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    targetListLayout.Parent = targetList

    -- Thêm các mục đã có vào danh sách
    for _, name in ipairs(CONFIG.targetNames) do
        local newItem = Instance.new("TextLabel")
        newItem.Name = name .. "Item"
        newItem.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        newItem.Size = UDim2.new(1, -10, 0, 25)
        newItem.Text = name
        newItem.TextColor3 = getItemColor(name)
        newItem.Font = Enum.Font.SourceSans
        newItem.TextSize = 14
        newItem.Parent = targetList

        -- Nút xóa
        local removeButton = Instance.new("TextButton")
        removeButton.Name = "RemoveButton"
        removeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        removeButton.Position = UDim2.new(1, -25, 0, 2)
        removeButton.Size = UDim2.new(0, 20, 0, 20)
        removeButton.Text = "X"
        removeButton.TextColor3 = Color3.new(1, 1, 1)
        removeButton.Font = Enum.Font.SourceSansBold
        removeButton.TextSize = 14
        removeButton.Parent = newItem

        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 4)
        buttonCorner.Parent = removeButton

        removeButton.MouseButton1Click:Connect(function()
            -- Xóa vật phẩm khỏi danh sách
            for i, targetName in ipairs(CONFIG.targetNames) do
                if targetName == name then
                    table.remove(CONFIG.targetNames, i)
                    break
                end
            end

            -- Xóa khỏi GUI
            newItem:Destroy()

            showNotification("Đã xóa vật phẩm '" .. name .. "' khỏi danh sách", 2)
        end)
    end



    -- Cập nhật kích thước canvas
    targetList.CanvasSize = UDim2.new(0, 0, 0, targetListLayout.AbsoluteContentSize.Y + 10)

    -- Điều chỉnh CanvasSize dựa trên nội dung
    content.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 50)

    return gui
end

-- Tạo nút nhỏ để hiện/ẩn menu chính
createMiniButton = function()
    if miniButtonGui then
        miniButtonGui:Destroy()
    end

    miniButtonGui = Instance.new("ScreenGui")
    miniButtonGui.Name = "ESPMiniButton"
    miniButtonGui.ResetOnSpawn = false
    miniButtonGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    pcall(function()
        miniButtonGui.Parent = game:GetService("CoreGui")
    end)

    miniButton = Instance.new("TextButton")
    miniButton.Name = "MiniButton"
    miniButton.Size = CONFIG.miniButtonSize
    miniButton.Position = CONFIG.miniButtonPosition
    miniButton.BackgroundColor3 = CONFIG.miniButtonColor
    miniButton.BackgroundTransparency = CONFIG.miniButtonBackgroundTransparency
    miniButton.Text = CONFIG.miniButtonText
    miniButton.TextColor3 = CONFIG.miniButtonTextColor
    miniButton.Font = Enum.Font.SourceSansBold
    miniButton.TextSize = CONFIG.miniButtonTextSize
    miniButton.Parent = miniButtonGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.5, 0) -- Nút tròn
    corner.Parent = miniButton

    miniButton.MouseButton1Click:Connect(function()
        toggleMainGUI()
    end)

    return miniButton
end

-- Chuyển đổi hiển thị của menu chính
toggleMainGUI = function()
    guiVisible = not guiVisible

    if gui then
        if guiVisible then
            -- Animation mở - scale từ nhỏ đến to
            gui.Enabled = true
            local mainFrame = gui:FindFirstChild("MainFrame")
            if mainFrame then
                mainFrame.Size = UDim2.new(0, 0, 0, 0)
                mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                local sizeTween = game:GetService("TweenService"):Create(
                    mainFrame,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
                    {
                        Size = UDim2.new(0, 400, 0, 350),
                        Position = UDim2.new(0.5, -200, 0.5, -175)
                    }
                )
                sizeTween:Play()
            end
        else
            -- Animation đóng - thu nhỏ rồi ẩn
            local mainFrame = gui:FindFirstChild("MainFrame")
            if mainFrame then
                local sizeTween = game:GetService("TweenService"):Create(
                    mainFrame,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Back, Enum.EasingDirection.In),
                    {
                        Size = UDim2.new(0, 0, 0, 0),
                        Position = UDim2.new(0.5, 0, 0.5, 0)
                    }
                )
                sizeTween:Play()

                task.spawn(function()
                    task.wait(CONFIG.animationSpeed)
                    if gui then
                        gui.Enabled = false
                    end
                end)
            else
                if gui then
                    gui.Enabled = false
                end
            end
        end
    elseif guiVisible then
        createMainGUI()
        local mainFrame = gui:FindFirstChild("MainFrame")
        if mainFrame then
            mainFrame.Size = UDim2.new(0, 0, 0, 0)
            mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            local sizeTween = game:GetService("TweenService"):Create(
                mainFrame,
                TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
                {
                    Size = UDim2.new(0, 400, 0, 350),
                    Position = UDim2.new(0.5, -200, 0.5, -175)
                }
            )
            sizeTween:Play()
        end
    end

    if miniButtonGui then
        if guiVisible then
            -- Ẩn nút nhỏ với animation fade out
            local buttonTween = game:GetService("TweenService"):Create(
                miniButton,
                TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                {BackgroundTransparency = 1, TextTransparency = 1}
            )
            buttonTween:Play()

            task.spawn(function()
                task.wait(CONFIG.animationSpeed)
                miniButtonGui.Enabled = false
                -- Khôi phục transparency cho lần tiếp theo
                miniButton.BackgroundTransparency = CONFIG.miniButtonBackgroundTransparency
                miniButton.TextTransparency = 0
            end)
        else
            -- Hiện nút nhỏ với animation fade in
            miniButtonGui.Enabled = true
            miniButton.BackgroundTransparency = 1
            miniButton.TextTransparency = 1

            local buttonTween = game:GetService("TweenService"):Create(
                miniButton,
                TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                {BackgroundTransparency = CONFIG.miniButtonBackgroundTransparency, TextTransparency = 0}
            )
            buttonTween:Play()
        end
    elseif not guiVisible then
        createMiniButton()
        miniButton.BackgroundTransparency = 1
        miniButton.TextTransparency = 1

        local buttonTween = game:GetService("TweenService"):Create(
            miniButton,
            TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
            {BackgroundTransparency =CONFIG.miniButtonBackgroundTransparency, TextTransparency = 0}
        )
        buttonTween:Play()
    end
end

-- Xử lý input từ người dùng
local function setupUserInput()
    game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end

        -- Bật/tắt ESP
        if input.KeyCode == CONFIG.toggleKey then
            toggleESP()
        -- Bật/tắt noclip
        elseif input.KeyCode == CONFIG.noclipToggleKey then
            toggleNoclip()
        -- Bật/tắt tự động tương tác

local toggleFullLight = function()
    fullLightEnabled = not fullLightEnabled
    -- Kích hoạt lại script mỗi khi bật hoặc tắt
    pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Hoanqson/full-light/refs/heads/main/main.lua'))()
    end)

    showNotification("Full Light đã " .. (fullLightEnabled and "bật" or "tắt"), 2)

    -- Cập nhật trạng thái toggle trong GUI
    if gui then
        local fullLightToggle = gui:FindFirstChild("FullLightToggle", true)
        if fullLightToggle then
            local circle = fullLightToggle:FindFirstChild("Circle")
            if circle then
                local targetPos = fullLightEnabled
                    and UDim2.new(1, -CONFIG.toggleCircleSize - CONFIG.toggleOffsetX, 0.5, 0)
                    or UDim2.new(0, CONFIG.toggleOffsetX, 0.5, 0)

                local targetColor = fullLightEnabled and CONFIG.guiToggleOnColor or CONFIG.guiToggleOffColor

                local posTween = game:GetService("TweenService"):Create(
                    circle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {Position = targetPos}
                )
                local colorTween = game:GetService("TweenService"):Create(
                    fullLightToggle,
                    TweenInfo.new(CONFIG.animationSpeed, Enum.EasingStyle.Quint),
                    {BackgroundColor3 = targetColor}
                )

                posTween:Play()
                colorTween:Play()
            end
        end
    end
end

        elseif input.KeyCode == CONFIG.interactToggleKey then
            toggleAutoInteract()
        -- Hiện lại menu
        elseif input.KeyCode == CONFIG.miniButtonToggleKey and not guiVisible then
            toggleMainGUI()
        end
    end)
end

-- Xử lý khi character được tạo lại
local function setupCharacterHandling()
    player.CharacterAdded:Connect(function(newCharacter)
        character = newCharacter
        hrp = character:WaitForChild("HumanoidRootPart")
        humanoid = character:WaitForChild("Humanoid")

        -- Nếu noclip đang bật, áp dụng lại
        if noclipEnabled then
            if noclipConnection then
                noclipConnection:Disconnect()
            end

            toggleNoclip()
            toggleNoclip()
        end
    end)
end

-- Khởi tạo script
local function initialize()
    -- Xóa UI cũ nếu có
    for _, guiChild in pairs(game:GetService("CoreGui"):GetChildren()) do
        if guiChild:IsA("ScreenGui") and (guiChild.Name == "ESPGUI" or guiChild.Name == "ESPMiniButton" or guiChild.Name == "IgnoreButtonGui") then
            pcall(function() guiChild:Destroy() end)
        end
    end

    -- Tạo GUI
    createMainGUI()

    -- Thiết lập xử lý input
    setupUserInput()

    -- Thiết lập xử lý character
    setupCharacterHandling()

    -- Hiển thị thông báo khởi động
    showNotification("ESP Main v4 đã được khởi động", 3)
end

-- Chạy script
initialize()
game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "ESP SCRIPT V4",
        Text = "Script By Hoanqson2107 <3 N",
        Duration = 5
    })
